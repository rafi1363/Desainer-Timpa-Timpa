---
// Import fungsi 'getImage' dari Astro untuk optimasi gambar
import { getImage } from "astro:assets";

// 1. Menggunakan 'import.meta.glob' untuk mendapatkan path file yang asli
const semuaGambar = import.meta.glob(
  "/src/assets/galeri/**/*.{png,jpg,jpeg,webp}"
);

// 2. Kita siapkan array kosong untuk menampung data gambar yang sudah diolah
const dataGaleri = [];

// 3. Loop melalui setiap 'path' gambar yang ditemukan
for (const path in semuaGambar) {
  // Memuat modul gambar secara dinamis
  const modulGambar = await semuaGambar[path]();

  // 4. Mengekstrak nama artis dari 'path' yang bersih (sebelum diubah Astro)
  const namaFile = path.split("/").pop(); // Hasilnya: "aaisgraphc.png"
  const namaArtis = namaFile.split(".").slice(0, -1).join("."); // Hasilnya: "aaisgraphc"

  // Optimalkan gambar menggunakan getImage
  const gambarOptimized = await getImage({
    src: modulGambar.default, // Sumber gambar asli
    width: 600, // Ubah lebar gambar menjadi 600px
    format: "webp", // Konversi formatnya ke WebP yang modern
    quality: 80, // Atur kualitas kompresi
  });

  // Masukkan data yang sudah jadi ke dalam array dataGaleri
  dataGaleri.push({
    artis: `@${namaArtis}`,
    gambar: gambarOptimized,
  });
}
---

<section id="galeri" class="gallery">
  <h3 class="section-title">Karya</h3>

  <div class="gallery-grid">
    {
      dataGaleri.map((item) => (
        <div class="gallery-item">
          <img
            src={item.gambar.src}
            width={item.gambar.attributes.width}
            height={item.gambar.attributes.height}
            alt={`Poster Design by ${item.artis}`}
            loading="lazy"
          />
          <div class="gallery-overlay">
            <h4>Poster</h4>
            <p>by {item.artis}</p>
          </div>
        </div>
      ))
    }
  </div>
</section>
